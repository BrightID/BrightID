name: Build Android
on: [push, pull_request]

jobs:

  build_debug_apk:
    if: github.repository_owner == 'BrightID'

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: BrightID

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: debug build
        run: |
          touch ./android/app/src/main/assets/index.android.bundle
          mv ./android/app/google-services.json-dev ./android/app/google-services.json
          ./node_modules/.bin/react-native bundle --dev false --platform android --entry-file index.js --bundle-output ./android/app/src/main/assets/index.android.bundle --assets-dest ./android/app/src/main/res/
          cd android && ./gradlew assembleDebug && cd ..

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: brightId-debug.apk
          path: /home/runner/work/BrightID/BrightID/BrightID/android/app/build/outputs/apk/debug/app-debug.apk

  build_staging_apk:
    if: github.repository_owner == 'BrightID'

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: BrightID

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Decrypt keystore and Google Credential
        run: ./scripts/staging.sh
        env:
          ENCRYPT_PASSWORD: ${{ secrets.ENCRYPT_PASSWORD }}

      - name: build staging apk
        run: cd android && ./gradlew assembleStaging && cd ..

      - name: build staging aab
        run: cd android && ./gradlew bundleStaging && cd ..

      - name: Upload apk
        uses: actions/upload-artifact@v3
        with:
          name: brightId-staging.apk
          path: /home/runner/work/BrightID/BrightID/BrightID/android/app/build/outputs/apk/staging/app-staging.apk

      - name: Upload aab
        uses: actions/upload-artifact@v3
        with:
          name: brightId-staging.aab
          path: /home/runner/work/BrightID/BrightID/BrightID/android/app/build/outputs/bundle/staging/app-staging.aab


  build_release_apk:
    if: github.repository_owner == 'BrightID'

    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: BrightID

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Decrypt keystore and Google Credential
        run: ./scripts/decrypt.sh
        env:
          ENCRYPT_PASSWORD: ${{ secrets.ENCRYPT_PASSWORD }}

      - name: build release apk
        run: cd android && ./gradlew assembleRelease && cd ..

      - name: build release aab
        run: cd android && ./gradlew bundleRelease && cd ..

      - name: Upload apk
        uses: actions/upload-artifact@v3
        with:
          name: brightId-release.apk
          path: /home/runner/work/BrightID/BrightID/BrightID/android/app/build/outputs/apk/release/app-release.apk

      - name: Upload aab
        uses: actions/upload-artifact@v3
        with:
          name: brightId-release.aab
          path: /home/runner/work/BrightID/BrightID/BrightID/android/app/build/outputs/bundle/release/app-release.aab
